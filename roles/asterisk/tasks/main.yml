---
# tasks file for asterisk
- name: install required packages
  apt: name={{ item }} state=present
  with_items: '{{ ubuntu_packages }}'
  notify: enable mariadb

- name: install Pear Packages
  pear: name=Console_Getopt state=present

- name: mariadb | remove anonymous users
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User=''
  changed_when: False

- name: mariadb | forbid remote root login
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False

- name: MariaDB | Remove test database
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DROP DATABASE test
    - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
  changed_when: False
  ignore_errors: True

- name: mariadb | reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  ignore_errors: True

- name: dahdi download
  unarchive:
    src: 'http://downloads.asterisk.org/pub/telephony/dahdi-linux-complete/dahdi-linux-complete-current.tar.gz'
    dest: '/usr/src'
    copy: no
    
- name: dahdi Install  
  shell: '{{ item }}'
  args:
    chdir: /usr/src/dahdi-linux-complete-2.11.1+2.11.1
  with_items:
    - make all
    - make install
    - make config
    
- name: libpri | Download
  unarchive:
    src : 'http://downloads.asterisk.org/pub/telephony/libpri/libpri-current.tar.gz'
    dest: '/usr/src'
    copy: no
    
- name: libpri | Install
  command: '{{ item }}'
  args:
    chdir: /usr/src/libpri-1.5.0
  with_items:
    - make
    - make install

- name: pjproject  | Download
  unarchive:
    src : 'http://www.pjsip.org/release/2.4/pjproject-2.4.tar.bz2'
    dest: '/usr/src'
    copy: no

- name: pjproject | Install
  command: '{{ item }}'
  args:
    chdir: /usr/src/pjproject-2.4
  environment:
    CFLAGS: '-DPJ_HAS_IPV6=0'
  with_items:
    - ./configure --prefix=/usr --enable-shared --disable-sound --disable-resample --disable-video --disable-opencore-amr --libdir=/usr/lib64
    - make dep
    - make
    - make install
   
- name: Jansson | Download
  unarchive:
    src : 'https://github.com/akheron/jansson/archive/v2.7.tar.gz'
    dest: '/usr/src/'
    copy: no

- name: Jansson | Install
  command: '{{ item }}'
  args:
    chdir: /usr/src/jansson-2.7
  with_items:
    - autoreconf -i
    - ./configure --libdir=/usr/lib64
    - make
    - make install
    
- name: add the Asterisk user
  user:
    name      : asterisk
    comment   : 'asterisk user'
    createhome: no
    system    : no    

- name: asterisk | download
  unarchive:
    src : 'http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-14-current.tar.gz'
    dest: '/usr/src/'
    copy: no
       
- name: asterisk | register the src dir into ansible
  command: ls -d /usr/src/asterisk-*
  register: asterisk_dir

- name: asterisk | configure
  command: ' {{ item }}'
  args:
    chdir: '{{ asterisk_dir.stdout }}'
  with_items:
    - ./contrib/scripts/install_prereq install 
    - ./configure --libdir=/usr/lib64
    - ./contrib/scripts/get_mp3_source.sh
 
#- name: asterisk | make menuedit 1
#  template:
#    src : 'files/menuselect.makedeps'
#    dest: '{{ asterisk_dir.stdout }}'
#    mode: 0644
#
- name: asterisk | make menuedit 2
  template:
    src : 'files/menuselect-tree'
    dest: '{{ asterisk_dir.stdout }}'
    mode: 0644

- name: asterisk | compile
  command: ' {{ item }}'
  args:
    chdir: '{{ asterisk_dir.stdout }}'
  with_items:
    - make
    - make install
    - make config
    - ldconfig
  notify: stop asterisk 

- name: asterisk | fix permissions - /var/run/asterisk
  file:
    path   : '/var/run/asterisk'
    state  : directory
    owner  : 'asterisk'
    group  : 'asterisk'
    recurse: no

- name: asterisk | fix permissions - /etc/asterisk
  file:
    path   : '/etc/asterisk'
    state  : directory
    owner  : 'asterisk'
    group  : 'asterisk'
    recurse: no

- name: asterisk | fixpermissions - /var/lib/asterisk
  file:
    path   : '/var/lib/asterisk'
    state  : directory
    owner  : 'asterisk'
    group  : 'asterisk'
    recurse: no

- name: asterisk | fixpermissions - /var/log/asterisk
  file:
    path   : '/var/log/asterisk'
    state  : directory
    owner  : 'asterisk'
    group  : 'asterisk'
    recurse: no

- name: asterisk | fixpermissions - /var/spool/asterisk
  file:
    path   : '/var/spool/asterisk'
    state  : directory
    owner  : 'asterisk'
    group  : 'asterisk'
    recurse: no

- name: asterisk | fixpermissions - /usr/lib64/asterisk
  file:
    path   : '/usr/lib64/asterisk'
    state  : directory
    owner  : 'asterisk'
    group  : 'asterisk'
    recurse: no

- name: asterisk | fixpermissions - /var/www
  file:
    path   : '/var/www'
    state  : directory
    owner  : 'asterisk'
    group  : 'asterisk'
    recurse: no
#
- name: apache2 | set apache2 to use asterisk for user
  replace:
    dest   : '/etc/apache2/apache2.conf'
    regexp : '(\s+)User\ apache2(\s+.*)?$'
    replace: '\1User asterisk\2'

- name: apache2 | set apache2 to use asterisk for group
  replace:
    dest   : '/etc/apache2/apache2.conf'
    regexp : '(\s+)Group\ apache2(\s+.*)?$'
    replace: '\1Group asterisk\2'

- name: httpd | allowoverride = all
  replace:
    dest   : '/etc/apache2/apache2.conf'
    regexp : '(<[dD]irectory /var/www/>[^<]*)AllowOverride None'
    replace: '\1AllowOverride All'
  notify:
    - restart apache2
    
- name: configure odbcinst.ini
  template: src=odbcinst.ini.j2 dest=/etc/odbcinst.ini
  tags: [ congigs ]
      
- name: configure odbc.ini
  template: src=odbc.ini.j2 dest=/etc/odbc.ini
  tags: [ configs ]