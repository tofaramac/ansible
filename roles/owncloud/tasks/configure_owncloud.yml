---

- name: Setup cron service
  cron:
    name: 'ownCloud Background Jobs'
    minute: '{{ owncloud_cron_minute }}'
    user: '{{ owncloud_user }}'
    job: '/usr/bin/php -f {{ owncloud_deploy_path }}/cron.php'
    cron_file: 'owncloud'

- name: Setup logrotate for owncloud
  template:
    src: etc/logrotate.d/owncloud.j2
    dest: /etc/logrotate.d/owncloud
    owner: root
    group: root
    mode: 0644

- name: Lookup admin password if secrets/ directory is defined
  set_fact:
    owncloud_admin_password: "{{ lookup('password', secret + '/credentials/' + ansible_fqdn + '/owncloud/admin/' + owncloud_admin_username + '/password length=' + owncloud_password_length) }}"
  when: secret is defined and owncloud_admin_username

- name: Check if ownCloud is configured
  stat:
    path: '{{ owncloud_deploy_path }}/config/config.php'
  register: owncloud_config_file

- name: Install ownCloud autoconfig file
  template:
    src: srv/www/sites/config/autoconfig.php.j2
    dest: '{{ owncloud_deploy_path }}/config/autoconfig.php'
    owner: '{{ owncloud_user }}'
    group: '{{ owncloud_group }}'
    mode: 0660
  when: owncloud_config_file is defined and not owncloud_config_file.stat.exists

- name: Install ownCloud default config file
  template:
    src: srv/www/sites/config/config.default.php.j2
    dest: '{{ owncloud_deploy_path }}/config/config.php'
    owner: '{{ owncloud_user }}'
    group: '{{ owncloud_group }}'
    mode: 0640
  when: owncloud_config_file is defined and not owncloud_config_file.stat.exists

- name: Use cron for background jobs (lib/private/...)
  lineinfile:
    dest: '{{ owncloud_deploy_path }}/lib/private/backgroundjob.php'
    state: present
    regexp: "return OC_Appconfig::getValue"
    line: "                return OC_Appconfig::getValue( 'core', 'backgroundjobs_mode', 'cron' );"
  when: owncloud_config_file is defined and not owncloud_config_file.stat.exists and owncloud_release == '8.0'

- name: Use cron for background jobs (settings/admin.php)
  lineinfile:
     dest: '{{ owncloud_deploy_path }}/settings/admin.php'
     state: present
     regexp: "'backgroundjobs_mode', OC_Appconfig::getValue"
     line: "$tmpl->assign('backgroundjobs_mode', OC_Appconfig::getValue('core', 'backgroundjobs_mode', 'cron'));"
  when: not owncloud_config_file

- name: Flush handlers if automatic setup is requested
  meta: flush_handlers
  when: owncloud_config_file is defined and not owncloud_config_file.stat.exists and
        owncloud_admin_username and owncloud_autosetup

- name: Automatically finish setup if allowed
  uri:
    url: '{{ owncloud_autosetup_url }}'
  when: owncloud_config_file is defined and not owncloud_config_file.stat.exists and
        owncloud_admin_username and owncloud_autosetup

- name: Allow to use the PHP CLI even if OCMemcacheAPCu is used
  template:
    src: 'etc/php5/cli/conf.d/enable_apc.ini.j2'
    dest: '/etc/php5/cli/conf.d/enable_apc.ini'
    owner: 'root'
    group: 'root'
    mode: '0644'
  when: owncloud_enable_apc_cli
  tags: [ 'role::owncloud:occ' ]

- name: Setup shortcut for the occ command
  template:
    src: 'usr/local/bin/occ.j2'
    dest: '/usr/local/bin/occ'
    owner: 'root'
    group: '{{ owncloud_group }}'
    mode: 0755
  when: owncloud_enable_occ_shortcut|d()
  tags: [ 'role::owncloud:occ' ]

- name: Remove shortcut for the occ command
  file:
    path: '/usr/local/bin/occ'
    state: 'absent'
  when: not owncloud_enable_occ_shortcut|d()
  tags: [ 'role::owncloud:occ' ]

- name: Run specified occ commands
  command: php --file "{{ owncloud_home }}/occ" {{ item.command }}
  environment: '{{ item.env|d({}) }}'
  changed_when: ('is already enabled' not in owncloud_occ_run.stdout and
                  'already exists' not in owncloud_occ_run.stdout)
  failed_when: (owncloud_occ_run.rc != 0 and 'already exists' not in owncloud_occ_run.stdout)
  no_log: True
  register: owncloud_occ_run
  sudo_user: '{{ owncloud_user }}'
  when: item|d() and item.command|d()
  with_flattened:
    - owncloud_run_occ_global_commands
    - owncloud_run_occ_group_commands
    - owncloud_run_occ_host_commands
  tags: [ 'role::owncloud:occ' ]
