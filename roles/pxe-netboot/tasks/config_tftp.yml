---
- name: config_tftp | checking to see if tftpboot_dir exists
  stat:
    path: "{{ tftpboot_dir }}"
  register: tftpboot_dir_stat

- name: config_tftp | creating tftpboot_dir
  file:
    path: "{{ tftpboot_dir }}"
    state: directory
  when: not tftpboot_dir_stat.stat.exists
  

- name: config_tftp | check if netboot has already been downloaded
  stat:
    path: "{{ tftpboot_dir }}/netboot_present"
  register: netboot_present

- name: config_tftp | downloading netboot
  get_url:
    url: "{{ netboot_url }}{{ netboot_file }}"
    dest: "{{ tftpboot_dir }}/{{ netboot_file }}"
  when: >
        not netboot_present.stat.exists

- name: config_tftp | extracting netboot
  shell: "tar zxvf {{ tftpboot_dir }}/{{ netboot_file }} -C {{ tftpboot_dir }}"
  when: >
        not netboot_present.stat.exists and
        ((sync_tftp is defined and not sync_tftp) or
        sync_tftp is not defined)

- name: config_tftp | marking as netboot already downloaded
  file:
    path: "{{ tftpboot_dir }}/netboot_present"
    state: touch
  when: not netboot_present.stat.exists

#- name: config_tftp | creating grub.cfg for installs
#  template:
#    src: "var/lib/tftpboot/grub.cfg.j2"
#    dest: "{{ tftpboot_dir }}/grub.cfg"
#    owner: root
#    group: root
#    mode: 0644

- name: config_tftp | creating preseed.cfg for auto-installs
  template:
    src: "var/lib/tftpboot/{{ item }}.cfg.j2"
    dest: "{{ tftpboot_dir }}/{{ item }}.cfg"
    owner: root
    group: root
    mode: 0644
  run_once: true
  with_items: '{{ tftp_preseed_files }}'
  when: sync_tftp is defined and sync_tftp

- name: config_tftp | reconfiguring txt.cfg
  template:
    src: "var/lib/tftpboot/ubuntu-installer/amd64/boot-screens/txt.cfg.j2"
    dest: "{{ tftpboot_dir }}/ubuntu-installer/amd64/boot-screens/txt.cfg"
    owner: root
    group: root
    mode: 0664
  notify: restart dnsmasq

- name: config_tftp | reconfigure menu.cfg
  template:
    src: "var/lib/tftpboot/ubuntu-installer/amd64/boot-screens/menu.cfg.j2"
    dest: "{{ tftpboot_dir }}/ubuntu-installer/amd64/boot-screens/menu.cfg"
    owner: root
    group: root
    mode: 0664

- name: config_tftp | reconfigure prompt.cfg
  template:
    src: "var/lib/tftpboot/ubuntu-installer/amd64/boot-screens/prompt.cfg.j2"
    dest: "{{ tftpboot_dir }}/ubuntu-installer/amd64/boot-screens/prompt.cfg"
    owner: root
    group: root
    mode: 0664

- name: config_tftp | reconfigure syslinux.cfg
  template:
    src: "var/lib/tftpboot/ubuntu-installer/amd64/boot-screens/syslinux.cfg.j2"
    dest: "{{ tftpboot_dir }}/ubuntu-installer/amd64/boot-screens/syslinux.cfg"
    owner: root
    group: root
    mode: 0664


- name: config_tftp | setting folder permissions on tftp_root_dir
  file:
    path: "{{ tftpboot_dir }}"
    state: directory
    recurse: yes
    owner: root
    group: root

- name: config_tftp | removing netboot_file
  file:
    path: "{{ tftpboot_dir }}/{{ netboot_file }}"
    state: absent


- name: Set tftpd-hpa parameters
  template:
    src: 'etc/default/tftpd-hpa.j2'
    dest: '/etc/default/tftpd-hpa'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: tftpd_register_template
  
- name: Install Dnsmasq
  package:
    name: dnsmasq
    state: present
  tags: dnsmasq
  
- name: Set configuration file
  template:
    src: 'etc/default/etc_dnsmasq.conf.j2'
    dest: '/etc/dnsmasq.conf'
  notify: restart dnsmasq
  tags: dnsmasq