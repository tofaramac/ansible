---
- name: build_images | creating images folder if it does not exist
  file:
    path: "{{ tftpboot_dir }}/{{ item }}"
    state: directory
  with_items: apache_tftp_links

- name: build_images | downloading isos
  get_url:
    url: "{{ item.url }}/{{ item.file }}"
    dest: "{{ tftpboot_dir }}/images/{{ item.file }}"
    force: no
  with_items: tftp_iso_images

- name: build_images | creating tftp_images_folders
  file:
    path: "{{ tftpboot_dir }}/images/{{ item }}"
    state: directory
  with_items: tftp_images_folders
  when: tftp_images_folders is defined

- name: build_images | unmounting iso images
  mount:
    name: "{{ tftpboot_dir }}/images/{{ item.folder }}"
    src: "{{ tftpboot_dir }}/images/{{ item.file }}"
    fstype: "iso9660"
    state: unmounted
  with_items: tftp_iso_images

#- name: build_images | unmounting VMware iso images
#  mount:
#    name: "{{ tftpboot_dir }}/images/{{ item.folder }}"
#    src: "{{ tftpboot_dir }}/images/{{ item.file }}"
#    fstype: "iso9660"
#    state: unmounted
#  with_items: vmware_iso_images

- name: build_images | setting tftpboot_dir folder permissions
  file:
    path: "{{ tftpboot_dir }}"
    state: directory
    recurse: yes
    owner: nobody
    group: nogroup

- name: build_images | mounting iso images
  mount:
    name: "{{ tftpboot_dir }}/images/{{ item.folder }}"
    src: "{{ tftpboot_dir }}/images/{{ item.file }}"
    fstype: "iso9660"
    state: mounted
  with_items: tftp_iso_images

#- name: build_images | checking that VMware iso images exist
#  stat:
#    path: "{{ tftpboot_dir }}/images/{{ item.file }}"
#  register: vmware_isos
#  with_items: vmware_iso_images
#  when: vmware_iso_images is defined
#
#- name: build_images | mounting VMware iso images
#  mount:
#    name: "{{ tftpboot_dir }}/images/{{ item.folder }}"
#    src: "{{ tftpboot_dir}}/images/{{ item.file }}"
#    fstype: "iso9660"
#    state: mounted
#  with_items: vmware_iso_images
#  when: >
#        vmware_iso_images is defined and
#        vmware_isos.results.0.stat.exists

- name: build_images | configuring apache2
  file:
    src: "{{ tftpboot_dir }}/{{ item }}"
    dest: "{{ apache_root }}/{{ item }}"
    owner: www-data
    group: www-data
    state: link
  with_items: apache_tftp_links

#- name: build_images | configuring ESXi kickstart file(s)
#  template:
#    src: "var/lib/tftpboot/KS/ESX_KS.CFG.j2"
#    dest: "{{ tftpboot_dir }}/KS/ESX_KS.CFG"
#  when: >
#        (esxi_create_host_kickstart_configs is defined and
#        not esxi_create_host_kickstart_configs) or
#        esxi_create_host_kickstart_configs is not defined
#
#- name: build_images | configuring ESXi kickstart file(s)
#  template:
#    src: "var/lib/tftpboot/KS/ESX_KS.CFG.j2"
#    dest: "{{ tftpboot_dir }}/KS/ESX_KS_{{ item.name }}.CFG"
#  with_items:
#    - esxi_hosts
#  when: >
#        esxi_hosts is defined and
#        (esxi_create_host_kickstart_configs is defined and
#        esxi_create_host_kickstart_configs)
#
#- name: build_images | creating ESXi boot folders
#  file:
#    path: "{{ tftpboot_dir }}/ESXi_boot/{{ item.version }}"
#    state: directory
#  with_items: vmware_iso_images
#  when: vmware_iso_images is defined
#
#- name: build_images | configuring ESXi boot.cfg
#  template:
#    src: "var/lib/tftpboot/ESXi_boot/boot.cfg.j2"
#    dest: "{{ tftpboot_dir }}/ESXi_boot/{{ item.version }}/boot.cfg"
#  with_items: vmware_iso_images
#  when: vmware_iso_images is defined
